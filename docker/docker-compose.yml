version: '2'
services:
  proxy:
    image: jwilder/nginx-proxy
    container_name: "${CONTAINER_PREFIX}-proxy"
    ports:
      - "${HTTP_PORT}:80"
      - "${HTTPS_PORT}:443"
    volumes:
      - ./nginx/certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx/conf.d/custom.conf:/etc/nginx/conf.d/custom.conf:ro
      - ./nginx/proxy.conf:/etc/nginx/proxy.conf:ro
      - ./logs/proxy:/var/log/nginx
    networks:
      - "${NETWORK_NAME}"
    restart: always
  dns:
   image: jpillora/dnsmasq
   container_name: "${CONTAINER_PREFIX}-dns"
   ports:
     - "53:53/udp"
     - "5380:8080"
   volumes:
     - ./dnsmasq/dnsmasq.conf:/etc/dnsmasq.conf
   environment:
     HTTP_USER: 'admin'
     HTTP_PASS: 'secret'
   networks:
     - "${NETWORK_NAME}"
   restart: always
  mysql:
    image: mysql:5.7
    container_name: "${CONTAINER_PREFIX}-mysql"
    expose:
      - "${DB_PORT}"
    ports:
      - "${DB_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASS}"
    volumes:
      - mysqldata:/var/lib/mysql
    networks:
      - "${NETWORK_NAME}"
    restart: always
  websockets:
    image: k1sliy/laravel-echo-server
    container_name: "${CONTAINER_PREFIX}-websockets"
    ports:
     - "6001:6001"
    restart: always
    volumes:
     - ./echo/config.json:/app/laravel-echo-server.json
    networks:
     - "${NETWORK_NAME}"
  redis:
    image: redis:alpine
    container_name: "${CONTAINER_PREFIX}-redis"
    volumes:
      - redisdata:/data
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - "${NETWORK_NAME}"
    restart: always

  mongodb:
    image: mongo:latest
    container_name: "${CONTAINER_PREFIX}-mongodb"
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/var/log/mongo
    ports:
      - ${MONGODB_PORT}:27017
    volumes:
      - mongo:/data
      - ./logs/mongo:/var/log/mongo
    networks:
      - "${NETWORK_NAME}"
    command: mongod --bind_ip=0.0.0.0 --smallfiles
    restart: always


networks:
 dev-env-network:
  external:
   name: "${NETWORK_NAME}"

volumes:
  mysqldata:
   driver: "local"
  redisdata:
   driver: "local"
  mongo:
   driver: "local"